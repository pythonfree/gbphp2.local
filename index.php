<?php

//1. Придумать класс, который описывает любую сущность из предметной области интернет-магазинов: продукт, ценник, посылка и т.п.
class Fruit {}

//2. Описать свойства класса из п.1 (состояние).
class Material
{
    private $color; //Цвет
    private $density; //Плотность
}

//3. Описать поведение класса из п.1 (методы).
class Material
{
    private $color; //Цвет
    private $density; //Плотность

    public function getColor() {}
    public function getDensity() {}
}

//4. Придумать наследников класса из п.1. Чем они будут отличаться?
class Cloth extends Material
{
        private $embroidery; //Ткань дополнительно имеет вышивку.

        public function getEmbroidery() {} //Получаем вышивку
}




//    5. Дан код:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();
//Что он выведет на каждом шаге? Почему? - Выведет: 1234, так как статичная переменная $x принадлежит классу, а не
//объекту и будет каждый раз при вызове метода foo увеличивать свое значение.




//    Немного изменим п.5:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();
//6. Объясните результаты в этом случае. - Выведет: 1122, так как здесь два независимых объекта, какждый из которых
//представляет свой класс.


//7. *Дан код:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;
$b1 = new B;
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();
//Что он выведет на каждом шаге? Почему? - Выведет: 1122, т.е. тоже, что и в предыдущем задании, здесь же просто убраны
//необязательные скобки у классов при создании объекта при отсутствии аргументов